// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/Reservation-summary/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/Reservation-summary">> = Specific
  const handler = {} as typeof import("../../src/app/Reservation-summary/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/auth/Signin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/Signin">> = Specific
  const handler = {} as typeof import("../../src/app/auth/Signin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/auth/Signup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/Signup">> = Specific
  const handler = {} as typeof import("../../src/app/auth/Signup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cars/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cars">> = Specific
  const handler = {} as typeof import("../../src/app/cars/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/cars-listings/add/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/cars-listings/add">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/cars-listings/add/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/cars-listings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/cars-listings">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/cars-listings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/reports/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/reports">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/reports/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/reservations/create+/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/reservations/create+">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/reservations/create+/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/dashboard/reservations/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/reservations">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/reservations/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/home-folder/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/home-folder">> = Specific
  const handler = {} as typeof import("../../src/app/home-folder/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/pages/profile/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/pages/profile">> = Specific
  const handler = {} as typeof import("../../src/app/pages/profile/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/pages/reservations/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/pages/reservations">> = Specific
  const handler = {} as typeof import("../../src/app/pages/reservations/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/payment/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/payment">> = Specific
  const handler = {} as typeof import("../../src/app/payment/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/pickupreturn/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/pickupreturn">> = Specific
  const handler = {} as typeof import("../../src/app/pickupreturn/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/soft-reserve/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/soft-reserve">> = Specific
  const handler = {} as typeof import("../../src/app/soft-reserve/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/softReserveForm/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/softReserveForm">> = Specific
  const handler = {} as typeof import("../../src/app/softReserveForm/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/userReserve/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/userReserve">> = Specific
  const handler = {} as typeof import("../../src/app/userReserve/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/userReserveForm/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/userReserveForm">> = Specific
  const handler = {} as typeof import("../../src/app/userReserveForm/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/authentication/signupAuth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/authentication/signupAuth">> = Specific
  const handler = {} as typeof import("../../src/app/api/authentication/signupAuth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/available-cars/[id]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/available-cars/[id]">> = Specific
  const handler = {} as typeof import("../../src/app/api/available-cars/[id]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/available-cars/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/available-cars">> = Specific
  const handler = {} as typeof import("../../src/app/api/available-cars/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/reservation/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/reservation">> = Specific
  const handler = {} as typeof import("../../src/app/api/reservation/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/v1/account/auth/activation/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/v1/account/auth/activation">> = Specific
  const handler = {} as typeof import("../../src/app/api/v1/account/auth/activation/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/dashboard/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../src/app/dashboard/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
